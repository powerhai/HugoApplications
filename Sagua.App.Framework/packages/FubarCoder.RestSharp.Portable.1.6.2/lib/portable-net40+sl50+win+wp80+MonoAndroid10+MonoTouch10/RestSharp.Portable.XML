<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RestSharp.Portable</name>
    </assembly>
    <members>
        <member name="T:RestSharp.Portable.Authenticators.HttpDigestAuthenticator">
            <summary>
            HTTP Digest authenticator
            </summary>
            <remarks>
            Code was taken from http://www.ifjeffcandoit.com/2013/05/16/digest-authentication-with-restsharp/
            </remarks>
        </member>
        <member name="T:RestSharp.Portable.Authenticators.IRoundTripAuthenticator">
            <summary>
            This authenticator can handle 401 responses and modify the Authentication behavior/result.
            </summary>
        </member>
        <member name="T:RestSharp.Portable.Authenticators.IAuthenticator">
            <summary>
            The authenticator interface
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.IAuthenticator.Authenticate(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Modifies the request to ensure that the authentication requirements are met.
            </summary>
            <param name="client">Client executing this request</param>
            <param name="request">Request to authenticate</param>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.IRoundTripAuthenticator.AuthenticationFailed(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest,RestSharp.Portable.IRestResponse)">
            <summary>
            Will be called when the authentication failed
            </summary>
            <param name="client">Client executing this request</param>
            <param name="request">Request to authenticate</param>
            <param name="response">Response of the failed request</param>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.HttpDigestAuthenticator.#ctor(System.Net.ICredentials)">
            <summary>
            Initializes the HTTP Digest authenticator with the given credentials
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.HttpDigestAuthenticator.Authenticate(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Modifies the request to ensure that the authentication requirements are met.
            </summary>
            <param name="client">Client executing this request</param>
            <param name="request">Request to authenticate</param>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.HttpDigestAuthenticator.AuthenticationFailed(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest,RestSharp.Portable.IRestResponse)">
            <summary>
            Will be called when the authentication failed
            </summary>
            <param name="client">Client executing this request</param>
            <param name="request">Request to authenticate</param>
            <param name="response">Response of the failed request</param>
        </member>
        <member name="T:RestSharp.Portable.Authenticators.HttpBasicAuthenticator">
            <summary>
            The default HTTP Basic authenticator
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.HttpBasicAuthenticator.#ctor(System.String,System.String)">
            <summary>
            Constructor taking the user name and password for the HTTP Basic authenticator
            </summary>
            <param name="username">User name</param>
            <param name="password">Password</param>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.HttpBasicAuthenticator.Authenticate(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Modifies the request to ensure that the authentication requirements are met.
            </summary>
            <param name="client">Client executing this request</param>
            <param name="request">Request to authenticate</param>
        </member>
        <member name="T:RestSharp.Portable.Authenticators.NtlmAuthenticator">
            <summary>
            Tries to Authenticate with the credentials of the currently logged in user, or impersonate a user
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.NtlmAuthenticator.#ctor(System.String,System.String)">
            <summary>
            Authenticate by impersonation
            </summary>
            <param name="username">User name</param>
            <param name="password">Password</param>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.NtlmAuthenticator.#ctor(System.Net.ICredentials)">
            <summary>
            Authenticate by impersonation, using an existing <c>ICredentials</c> instance
            </summary>
            <param name="credentials">The credentials to use</param>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.NtlmAuthenticator.Authenticate(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Modifies the request to ensure that the authentication requirements are met.
            </summary>
            <param name="client">Client executing this request</param>
            <param name="request">Request to authenticate</param>
        </member>
        <member name="T:RestSharp.Portable.Authenticators.SimpleAuthenticator">
            <summary>
            Simple authenticator that adds the authentication information as GetOrPost parameter
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.SimpleAuthenticator.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor for the simple authenticator
            </summary>
            <param name="usernameKey">GetOrPost parameter name for the user name</param>
            <param name="username">User name</param>
            <param name="passwordKey">GetOrPost parameter name for the password</param>
            <param name="password">Password</param>
        </member>
        <member name="M:RestSharp.Portable.Authenticators.SimpleAuthenticator.Authenticate(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Modifies the request to ensure that the authentication requirements are met.
            </summary>
            <param name="client">Client executing this request</param>
            <param name="request">Request to authenticate</param>
        </member>
        <member name="T:RestSharp.Portable.ContentCollectionMode">
            <summary>
            Controls if basic content or multi part content is used
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ContentCollectionMode.BasicContent">
            <summary>
            Basic content only (ignores file parameters)
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ContentCollectionMode.MultiPartForFileParameters">
            <summary>
            MultiPart only if file parameters are used
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ContentCollectionMode.MultiPart">
            <summary>
            Always use multi part content
            </summary>
        </member>
        <member name="T:RestSharp.Portable.Deserializers.IDeserializer">
            <summary>
            Deserialize for a content type
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Deserializers.IDeserializer.Deserialize``1(RestSharp.Portable.IRestResponse)">
            <summary>
            Deserialize the response
            </summary>
            <typeparam name="T">Object type to deserialize the result to</typeparam>
            <param name="response">The response to deserialize the result from</param>
            <returns>The deserialized object</returns>
        </member>
        <member name="T:RestSharp.Portable.Deserializers.JsonDeserializer">
            <summary>
            The default JSON deserializer using Json.Net
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Deserializers.JsonDeserializer.Deserialize``1(RestSharp.Portable.IRestResponse)">
            <summary>
            Deserialize the response
            </summary>
            <typeparam name="T">Object type to deserialize the result to</typeparam>
            <param name="response">The response to deserialize the result from</param>
            <returns>The deserialized object</returns>
        </member>
        <member name="M:RestSharp.Portable.Deserializers.JsonDeserializer.ConfigureSerializer(Newtonsoft.Json.JsonSerializer)">
            <summary>
            Configure the JsonSerializer
            </summary>
            <param name="serializer">The serializer to configure</param>
        </member>
        <member name="T:RestSharp.Portable.Deserializers.XmlDataContractDeserializer">
            <summary>
            Deserializes a XML using the DataContractSerializer
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Deserializers.XmlDataContractDeserializer.Deserialize``1(RestSharp.Portable.IRestResponse)">
            <summary>
            Deserialize the response
            </summary>
            <typeparam name="T">Object type to deserialize the result to</typeparam>
            <param name="response">The response to deserialize the result from</param>
            <returns>The deserialized object</returns>
        </member>
        <member name="M:RestSharp.Portable.Deserializers.XmlDataContractDeserializer.CreateSerializer(System.Type)">
            <summary>
            Create a new data contract serializer
            </summary>
            <param name="t">The type to create the serializer for</param>
        </member>
        <member name="T:RestSharp.Portable.Encodings.IEncoding">
            <summary>
            Content encoding handler interface
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Encodings.IEncoding.Decode(System.Byte[])">
            <summary>
            Decode the content
            </summary>
            <param name="data">Content to decode</param>
            <returns>Decoded content</returns>
        </member>
        <member name="T:RestSharp.Portable.FileParameter">
            <summary>
            Container for files to be uploaded with requests
            </summary>
        </member>
        <member name="T:RestSharp.Portable.Parameter">
            <summary>
            Parameter container for REST requests
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Parameter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:RestSharp.Portable.Parameter.Name">
            <summary>
            Name of the parameter
            </summary>
        </member>
        <member name="P:RestSharp.Portable.Parameter.Value">
            <summary>
            Value of the parameter
            </summary>
        </member>
        <member name="P:RestSharp.Portable.Parameter.Type">
            <summary>
            Type of the parameter
            </summary>
        </member>
        <member name="P:RestSharp.Portable.Parameter.ContentType">
            <summary>
            Content type of the parameter
            </summary>
            <remarks>
            Only applicable when Type is Body.
            </remarks>
        </member>
        <member name="P:RestSharp.Portable.Parameter.ValidateOnAdd">
            <summary>
            Should this parameter be validated?
            </summary>
            <remarks>
            Applies only HTTP header parameters
            </remarks>
        </member>
        <member name="M:RestSharp.Portable.FileParameter.Create(System.String,System.Byte[],System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
             Creates a file parameter from an array of bytes.
            </summary>
            <param name="name">The parameter name to use in the request.</param>
            <param name="data">The data to use as the file's contents.</param>
            <param name="filename">The filename to use in the request.</param>
            <param name="contentType">The content type to use in the request.</param>
            <returns>The <see cref="T:RestSharp.Portable.FileParameter"/></returns>
        </member>
        <member name="M:RestSharp.Portable.FileParameter.Create(System.String,System.Byte[],System.String)">
            <summary>
             Creates a file parameter from an array of bytes.
            </summary>
            <param name="name">The parameter name to use in the request.</param>
            <param name="data">The data to use as the file's contents.</param>
            <param name="filename">The filename to use in the request.</param>
            <returns>The <see cref="T:RestSharp.Portable.FileParameter"/> using the default content type.</returns>
        </member>
        <member name="M:RestSharp.Portable.FileParameter.Create(System.String,System.IO.Stream,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
             Creates a file parameter from an array of bytes.
            </summary>
            <param name="name">The parameter name to use in the request.</param>
            <param name="input">The input stream for the file's contents.</param>
            <param name="filename">The filename to use in the request.</param>
            <param name="contentType">The content type to use in the request.</param>
            <returns>The <see cref="T:RestSharp.Portable.FileParameter"/></returns>
        </member>
        <member name="M:RestSharp.Portable.FileParameter.Create(System.String,System.IO.Stream,System.String)">
            <summary>
             Creates a file parameter from an array of bytes.
            </summary>
            <param name="name">The parameter name to use in the request.</param>
            <param name="input">The input stream for the file's contents.</param>
            <param name="filename">The filename to use in the request.</param>
            <returns>The <see cref="T:RestSharp.Portable.FileParameter"/> using the default content type.</returns>
        </member>
        <member name="P:RestSharp.Portable.FileParameter.ContentLength">
            <summary>
            The length of data to be sent
            </summary>
        </member>
        <member name="P:RestSharp.Portable.FileParameter.FileName">
            <summary>
            Name of the file to use when uploading
            </summary>
        </member>
        <member name="T:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory">
            <summary>
            The default HTTP client factory
            </summary>
            <remarks>
            Any other implementation should derive from this class, because it contains serveral
            useful utility functions for the creation of a HTTP client and request message.
            </remarks>
        </member>
        <member name="T:RestSharp.Portable.IHttpClientFactory">
            <summary>
            Interface to allow custom creation of HttpClient and HttpRequestMessage objects
            </summary>
            <remarks>
            The DefaultHttpClientFactory contains some helpful protected methods that helps gathering
            the data required for a proper configuration of the HttpClient.
            </remarks>
        </member>
        <member name="M:RestSharp.Portable.IHttpClientFactory.CreateClient(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Create the client
            </summary>
            <param name="client">The REST client that wants to create the HTTP client</param>
            <param name="request">The REST request for which the HTTP client is created</param>
            <returns>A new HttpClient object</returns>
            <remarks>
            The DefaultHttpClientFactory contains some helpful protected methods that helps gathering
            the data required for a proper configuration of the HttpClient.
            </remarks>
        </member>
        <member name="M:RestSharp.Portable.IHttpClientFactory.CreateRequestMessage(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Create the request message
            </summary>
            <param name="client">The REST client that wants to create the HTTP request message</param>
            <param name="request">The REST request for which the HTTP request message is created</param>
            <returns>A new HttpRequestMessage object</returns>
            <remarks>
            The DefaultHttpClientFactory contains some helpful protected methods that helps gathering
            the data required for a proper configuration of the HttpClient.
            </remarks>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.HasCookies(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Returns if the HTTP client should be aware of cookies
            </summary>
            <param name="client">REST client</param>
            <param name="request">REST request</param>
            <returns>true == HTTP client should use a cookie container</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.GetBaseAddress(RestSharp.Portable.IRestClient)">
            <summary>
            Get the REST requests base address (for HTTP client)
            </summary>
            <param name="client">REST client</param>
            <returns>The base URL</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.GetMessageAddress(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Get the REST requests relative address (for HTTP request message)
            </summary>
            <param name="client">REST client</param>
            <param name="request">REST request</param>
            <returns>The relative request message URL</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.GetProxy(RestSharp.Portable.IRestClient)">
            <summary>
            The proxy to be used by the HTTP client
            </summary>
            <param name="client">REST client</param>
            <returns>Proxy object or null</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.GetCredentials(RestSharp.Portable.IRestRequest)">
            <summary>
            Get the credentials required for the REST request
            </summary>
            <param name="request">REST request</param>
            <returns>Credentials for the HTTP client or null</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.GetCookies(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Get the cookies for the HTTP client
            </summary>
            <param name="client">REST client</param>
            <param name="request">REST request</param>
            <returns>The cookie container or null</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.GetHttpMethod(RestSharp.Portable.IRestRequest)">
            <summary>
            Returns the HTTP method for the request message.
            </summary>
            <param name="request">REST request</param>
            <returns>HTTP method</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.AddHttpHeaderParameters(System.Net.Http.HttpRequestMessage,RestSharp.Portable.IRestRequest)">
            <summary>
            Returns a modified HTTP request message object with HTTP header parameters
            </summary>
            <param name="message">HTTP request message</param>
            <param name="request">REST request</param>
            <returns>The modified HTTP request message</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.CreateMessageHandler(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Create the message handler
            </summary>
            <param name="client">The REST client that wants to create the HTTP client</param>
            <param name="request">The REST request for which the HTTP client is created</param>
            <returns>A new HttpMessageHandler object</returns>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.CreateClient(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Create the client
            </summary>
            <param name="client">The REST client that wants to create the HTTP client</param>
            <param name="request">The REST request for which the HTTP client is created</param>
            <returns>A new HttpClient object</returns>
            <remarks>
            The DefaultHttpClientFactory contains some helpful protected methods that helps gathering
            the data required for a proper configuration of the HttpClient.
            </remarks>
        </member>
        <member name="M:RestSharp.Portable.HttpClientImpl.DefaultHttpClientFactory.CreateRequestMessage(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Create the request message
            </summary>
            <param name="client">The REST client that wants to create the HTTP request message</param>
            <param name="request">The REST request for which the HTTP request message is created</param>
            <returns>A new HttpRequestMessage object</returns>
            <remarks>
            The DefaultHttpClientFactory contains some helpful protected methods that helps gathering
            the data required for a proper configuration of the HttpClient.
            </remarks>
        </member>
        <member name="T:RestSharp.Portable.IRestClient">
            <summary>
            REST client
            </summary>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.Execute(RestSharp.Portable.IRestRequest)">
            <summary>
            Execute the given request
            </summary>
            <param name="request">Request to execute</param>
            <returns>Response returned</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.Execute``1(RestSharp.Portable.IRestRequest)">
            <summary>
            Execute the given request
            </summary>
            <param name="request">Request to execute</param>
            <returns>Response returned, with a deserialized object</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.AddHandler(System.String,RestSharp.Portable.Deserializers.IDeserializer)">
            <summary>
            Add a new content type handler
            </summary>
            <param name="contentType">The Accept header value</param>
            <param name="deserializer">The deserializer to decode the content</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.RemoveHandler(System.String)">
            <summary>
            Remove a previously added content type handler
            </summary>
            <param name="contentType">The Accept header value that identifies the handler</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.ClearHandlers">
            <summary>
            Remove all previously added content type handlers
            </summary>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.GetHandler(System.String)">
            <summary>
            Get a previously added content type handler
            </summary>
            <param name="contentType">The Accept header value that identifies the handler</param>
            <returns>The deserializer that can handle the given content type.</returns>
            <remarks>
            This function returns NULL if the handler for the given content type cannot be found.
            </remarks>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.ReplaceHandler(System.Type,RestSharp.Portable.Deserializers.IDeserializer)">
            <summary>
            Replace all handlers of a given type with a new deserializer
            </summary>
            <param name="oldType">The type of the old deserializer</param>
            <param name="deserializer">The new deserializer</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.AddEncoding(System.String,RestSharp.Portable.Encodings.IEncoding)">
            <summary>
            Add a new content encoding handler
            </summary>
            <param name="encodingId">The Accept-Encoding header value</param>
            <param name="encoding">The encoding engine to decode the content</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.RemoveEncoding(System.String)">
            <summary>
            Remove a previously added content encoding handler
            </summary>
            <param name="encodingId">The Accept-Encoding header value that identifies the handler</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.ClearEncodings">
            <summary>
            Remove all previously added content encoding handlers
            </summary>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.IRestClient.GetEncoding(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get a previously added content encoding handler
            </summary>
            <param name="encodingIds">The Accept-Encoding header value that identifies the handler</param>
            <returns>The handler that can decode the given content encoding.</returns>
            <remarks>
            This function returns NULL if the handler for the given content encoding cannot be found.
            </remarks>
        </member>
        <member name="P:RestSharp.Portable.IRestClient.Authenticator">
            <summary>
            Authenticator to use for all requests
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestClient.BaseUrl">
            <summary>
            Base URL for all requests
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestClient.DefaultParameters">
            <summary>
            Default parameters for all requests
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestClient.CookieContainer">
            <summary>
            Cookies for all requests
            </summary>
            <remarks>
            Cookies set by the server will be collected here.
            </remarks>
        </member>
        <member name="P:RestSharp.Portable.IRestClient.Proxy">
            <summary>
            Proxy to use for the requests
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestClient.IgnoreResponseStatusCode">
            <summary>
            Ignore the response status code?
            </summary>
        </member>
        <member name="T:RestSharp.Portable.IRestRequest">
            <summary>
            Defines a REST request
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestRequest.Serializer">
            <summary>
            The serializer that should serialize the body
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestRequest.Method">
            <summary>
            HTTP request method (GET, POST, etc...)
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestRequest.Resource">
            <summary>
            The resource relative to the REST clients base URL
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestRequest.Parameters">
            <summary>
            REST request parameters
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestRequest.Credentials">
            <summary>
            The credentials used for the request (e.g. NTLM authentication)
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestRequest.ContentCollectionMode">
            <summary>
            Controls if we use basic content or multi part content by default.
            </summary>
        </member>
        <member name="T:RestSharp.Portable.IRestResponse">
            <summary>
            The generic REST response
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestResponse.Request">
            <summary>
            Request that resulted in this response
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestResponse.ResponseUri">
            <summary>
            The full response URL
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestResponse.RawBytes">
            <summary>
            The raw data
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestResponse.ContentType">
            <summary>
            Content type of the raw data
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestResponse.Headers">
            <summary>
            Response headers (without content headers)
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestResponse.StatusCode">
            <summary>
            HTTP status code
            </summary>
        </member>
        <member name="P:RestSharp.Portable.IRestResponse.StatusDescription">
            <summary>
            Description for the HTTP status code
            </summary>
        </member>
        <member name="T:RestSharp.Portable.IRestResponse`1">
            <summary>
            Typed response
            </summary>
            <typeparam name="T">Type of the object to deserialize from the raw data</typeparam>
        </member>
        <member name="P:RestSharp.Portable.IRestResponse`1.Data">
            <summary>
            Deserialized object of type T
            </summary>
        </member>
        <member name="T:RestSharp.Portable.ParameterType">
            <summary>
            Parameter type
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ParameterType.GetOrPost">
            <summary>
            Parameter will be stored in the URL query for a GET request, or in the body for a POST request
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ParameterType.UrlSegment">
            <summary>
            The parameter is part of the IRestResponse.Resource
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ParameterType.QueryString">
            <summary>
            The parameter is part of the resulting URL query
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ParameterType.HttpHeader">
            <summary>
            The parameter will be sent as HTTP header
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ParameterType.RequestBody">
            <summary>
            The parameter will be sent in the HTTP POST body
            </summary>
        </member>
        <member name="F:RestSharp.Portable.ParameterType.Cookie">
            <summary>
            The parameter will be sent as cookie value.
            </summary>
        </member>
        <member name="T:RestSharp.Portable.ParameterNameComparer">
            <summary>
            Compares parameters by name
            </summary>
        </member>
        <member name="M:RestSharp.Portable.ParameterNameComparer.Equals(RestSharp.Portable.Parameter,RestSharp.Portable.Parameter)">
            <summary>
            Parameters have the same name?
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:RestSharp.Portable.ParameterNameComparer.GetHashCode(RestSharp.Portable.Parameter)">
            <summary>
            Calculate the hash code for a given parameter
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:RestSharp.Portable.ParameterNameComparer.Default">
            <summary>
            The default parameter name comparer instance
            </summary>
        </member>
        <member name="T:RestSharp.Portable.RestClient">
            <summary>
            The default REST client
            </summary>
        </member>
        <member name="M:RestSharp.Portable.RestClient.#ctor">
            <summary>
            Constructor that initializes some default content handlers
            </summary>
        </member>
        <member name="M:RestSharp.Portable.RestClient.#ctor(System.Uri)">
            <summary>
            Constructor that initializes the base URL and some default content handlers
            </summary>
            <param name="baseUrl">Base URL</param>
        </member>
        <member name="M:RestSharp.Portable.RestClient.#ctor(System.String)">
            <summary>
            Constructor that initializes the base URL and some default content handlers
            </summary>
            <param name="baseUrl">Base URL</param>
        </member>
        <member name="M:RestSharp.Portable.RestClient.Execute(RestSharp.Portable.IRestRequest)">
            <summary>
            Execute the given request
            </summary>
            <param name="request">Request to execute</param>
            <returns>Response returned</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.Execute``1(RestSharp.Portable.IRestRequest)">
            <summary>
            Execute the given request
            </summary>
            <param name="request">Request to execute</param>
            <returns>Response returned, with a deserialized object</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.AddHandler(System.String,RestSharp.Portable.Deserializers.IDeserializer)">
            <summary>
            Add a new content type handler
            </summary>
            <param name="contentType">The Accept header value</param>
            <param name="deserializer">The deserializer to decode the content</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.RemoveHandler(System.String)">
            <summary>
            Remove a previously added content type handler
            </summary>
            <param name="contentType">The Accept header value that identifies the handler</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.ClearHandlers">
            <summary>
            Remove all previously added content type handlers
            </summary>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.GetHandler(System.String)">
            <summary>
            Get a previously added content type handler
            </summary>
            <param name="contentType">The Accept header value that identifies the handler</param>
            <returns>The deserializer that can handle the given content type.</returns>
            <remarks>
            This function returns NULL if the handler for the given content type cannot be found.
            </remarks>
        </member>
        <member name="M:RestSharp.Portable.RestClient.ReplaceHandler(System.Type,RestSharp.Portable.Deserializers.IDeserializer)">
            <summary>
            Replace all handlers of a given type with a new deserializer
            </summary>
            <param name="oldType">The type of the old deserializer</param>
            <param name="deserializer">The new deserializer</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.AddEncoding(System.String,RestSharp.Portable.Encodings.IEncoding)">
            <summary>
            Add a new content encoding handler
            </summary>
            <param name="encodingId">The Accept-Encoding header value</param>
            <param name="encoding">The encoding engine to decode the content</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.RemoveEncoding(System.String)">
            <summary>
            Remove a previously added content encoding handler
            </summary>
            <param name="encodingId">The Accept-Encoding header value that identifies the handler</param>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.ClearEncodings">
            <summary>
            Remove all previously added content encoding handlers
            </summary>
            <returns>The client itself, to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClient.GetEncoding(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get a previously added content encoding handler
            </summary>
            <param name="encodingIds">The Accept-Encoding header value that identifies the handler</param>
            <returns>The handler that can decode the given content encoding.</returns>
            <remarks>
            This function returns NULL if the handler for the given content encoding cannot be found.
            </remarks>
        </member>
        <member name="P:RestSharp.Portable.RestClient.HttpClientFactory">
            <summary>
            HTTP client factory used to create IHttpClient implementations
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestClient.BaseUrl">
            <summary>
            Base URL for all requests
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestClient.Authenticator">
            <summary>
            Authenticator to use for all requests
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestClient.CookieContainer">
            <summary>
            Cookies for all requests
            </summary>
            <remarks>
            Cookies set by the server will be collected here.
            </remarks>
        </member>
        <member name="P:RestSharp.Portable.RestClient.DefaultParameters">
            <summary>
            Default parameters for all requests
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestClient.IgnoreResponseStatusCode">
            <summary>
            Ignore the response status code?
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestClient.Proxy">
            <summary>
            Proxy to use for the requests
            </summary>
        </member>
        <member name="T:RestSharp.Portable.RestClientExtensions">
            <summary>
            Extension functions for REST clients
            </summary>
        </member>
        <member name="M:RestSharp.Portable.RestClientExtensions.AddDefaultParameter(RestSharp.Portable.IRestClient,System.String,System.Object)">
            <summary>
            Add a default parameter to a REST client
            </summary>
            <param name="client">REST client to add the new parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <returns>The REST client to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClientExtensions.AddDefaultParameter(RestSharp.Portable.IRestClient,System.String,System.Object,RestSharp.Portable.ParameterType)">
            <summary>
            Add a default parameter to a REST client
            </summary>
            <param name="client">REST client to add the new parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <param name="type">Type of the parameter</param>
            <returns>The REST client to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClientExtensions.AddDefaultParameter(RestSharp.Portable.IRestClient,RestSharp.Portable.Parameter)">
            <summary>
            Add a default parameter to a REST client
            </summary>
            <param name="client">REST client to add the new parameter to</param>
            <param name="parameter">The parameter to add</param>
            <returns>The REST client to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClientExtensions.RemoveDefaultParameter(RestSharp.Portable.IRestClient,System.String)">
            <summary>
            Remove a default parameter from the REST client
            </summary>
            <param name="client">REST client to remove the parameter from</param>
            <param name="name">Name of the parameter</param>
            <returns>The REST client to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestClientExtensions.BuildUrl(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest,System.Boolean)">
            <summary>
            Build the full URL for a request
            </summary>
            <param name="client">The REST client that will execute the request</param>
            <param name="request">The REST request</param>
            <param name="withQuery">Should the resulting URL contain the query?</param>
            <returns>Resulting URL</returns>
            <remarks>
            The resulting URL is a combination of the REST client's BaseUrl and the REST requests
            Resource, where all URL segments are replaced and - optionally - the query parameters
            added.
            </remarks>
        </member>
        <member name="T:RestSharp.Portable.RestRequest">
            <summary>
            The default REST request
            </summary>
        </member>
        <member name="M:RestSharp.Portable.RestRequest.#ctor(System.String)">
            <summary>
            Constructor that initializes the resource path, HTTP GET request method and the JSON serializer as default serializer
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:RestSharp.Portable.RestRequest.#ctor(System.String,System.Net.Http.HttpMethod)">
            <summary>
            Constructor that initializes the resource path, HTTP request method and the JSON serializer as default serializer
            </summary>
            <param name="resource"></param>
            <param name="method"></param>
        </member>
        <member name="M:RestSharp.Portable.RestRequest.#ctor(System.Uri)">
            <summary>
            Constructor that initializes the resource path, HTTP GET request method and the JSON serializer as default serializer
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:RestSharp.Portable.RestRequest.#ctor(System.Uri,System.Net.Http.HttpMethod)">
            <summary>
            Constructor that initializes the resource path, HTTP request method and the JSON serializer as default serializer
            </summary>
            <param name="resource"></param>
            <param name="method"></param>
        </member>
        <member name="P:RestSharp.Portable.RestRequest.Method">
            <summary>
            HTTP request method (GET, POST, etc...)
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestRequest.Resource">
            <summary>
            The resource relative to the REST clients base URL
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestRequest.Parameters">
            <summary>
            REST request parameters
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestRequest.Serializer">
            <summary>
            The serializer that should serialize the body
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestRequest.Credentials">
            <summary>
            The credentials used for the request (e.g. NTLM authentication)
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestRequest.ContentCollectionMode">
            <summary>
            Controls if we use basic content or multi part content by default.
            </summary>
        </member>
        <member name="T:RestSharp.Portable.RestRequestExtensions">
            <summary>
            Extension functions for REST requests
            </summary>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddBody(RestSharp.Portable.IRestRequest,System.Object)">
            <summary>
            Body to add to the parameters
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="obj">Object to serialize to the request body</param>
            <returns>The request object to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddParameter(RestSharp.Portable.IRestRequest,RestSharp.Portable.Parameter)">
            <summary>
            Generic add parameters function
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="parameter">Parameter to add</param>
            <returns>The request object to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddUrlSegment(RestSharp.Portable.IRestRequest,System.String,System.Object)">
            <summary>
            Add an URL segment parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddHeader(RestSharp.Portable.IRestRequest,System.String,System.Object)">
            <summary>
            Add a HTTP HEADER parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddParameter(RestSharp.Portable.IRestRequest,System.String,System.Object)">
            <summary>
            Add a parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddParameter(RestSharp.Portable.IRestRequest,System.String,System.Object,RestSharp.Portable.ParameterType)">
            <summary>
            Add a parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <param name="type">Type of the parameter</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddParameter(RestSharp.Portable.IRestRequest,System.String,System.Object,RestSharp.Portable.ParameterType,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Add a parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <param name="type">Type of the parameter</param>
            <param name="contentType">Content type for the parameter (only applicable to a Body parameter)</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddFile(RestSharp.Portable.IRestRequest,System.String,System.Byte[],System.String)">
            <summary>
            Add a file parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="bytes">File content</param>
            <param name="fileName">File name</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddFile(RestSharp.Portable.IRestRequest,System.String,System.Byte[],System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Add a file parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="bytes">File content</param>
            <param name="fileName">File name</param>
            <param name="contentType">Content type for the parameter (only applicable to a Body parameter)</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddFile(RestSharp.Portable.IRestRequest,System.String,System.IO.Stream,System.String)">
            <summary>
            Add a file parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="input">File content</param>
            <param name="fileName">File name</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddFile(RestSharp.Portable.IRestRequest,System.String,System.IO.Stream,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Add a file parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="name">Name of the parameter</param>
            <param name="input">File content</param>
            <param name="fileName">File name</param>
            <param name="contentType">Content type for the parameter (only applicable to a Body parameter)</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.AddFile(RestSharp.Portable.IRestRequest,RestSharp.Portable.FileParameter)">
            <summary>
            Add a file parameter to a REST request
            </summary>
            <param name="request">The REST request to add this parameter to</param>
            <param name="parameter">The new file parameter</param>
            <returns>The REST request to allow call chains</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.GetGetOrPostParameters(RestSharp.Portable.IRestRequest,System.Boolean)">
            <summary>
            Get the GetOrPost parameters (by default without file parameters, which are POST-only)
            </summary>
            <param name="request">The request to get the parameters from</param>
            <param name="withFile">true == with file parameters, but those are POST-only!</param>
            <returns>The list of GET or POST parameters</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.GetFileParameters(RestSharp.Portable.IRestRequest)">
            <summary>
            Get the file parameters
            </summary>
            <param name="request">The request to get the parameters from</param>
            <returns>The list of POST file parameters</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.GetDefaultMethod(RestSharp.Portable.IRestRequest)">
            <summary>
            Returns the HTTP method GET or POST - depending on the parameters
            </summary>
            <param name="request">The request to determine the HTTP method for</param>
            <returns>GET or POST</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.GetEffectiveHttpMethod(RestSharp.Portable.IRestRequest)">
            <summary>
            Returns the real HTTP method that must be used to execute a request
            </summary>
            <param name="request">The request to determine the HTTP method for</param>
            <returns>The real HTTP method that must be used</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.GetBodyContent(RestSharp.Portable.IRestRequest,RestSharp.Portable.Parameter)">
            <summary>
            Returns the HttpContent for the body parameter
            </summary>
            <param name="request">The request the body parameter belongs to</param>
            <param name="body">The body parameter</param>
            <returns>The resulting HttpContent</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.GetBasicContent(RestSharp.Portable.IRestRequest)">
            <summary>
            Gets the basic content (without files) for a request
            </summary>
            <param name="request">REST request to get the content for</param>
            <returns>The HTTP content to be sent</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.GetMultiPartContent(RestSharp.Portable.IRestRequest)">
            <summary>
            Gets the multi-part content (with files) for a request
            </summary>
            <param name="request">REST request to get the content for</param>
            <returns>The HTTP content to be sent</returns>
        </member>
        <member name="M:RestSharp.Portable.RestRequestExtensions.GetContent(RestSharp.Portable.IRestRequest)">
            <summary>
            Gets the content for a request
            </summary>
            <param name="request">REST request to get the content for</param>
            <returns>The HTTP content to be sent</returns>
        </member>
        <member name="T:RestSharp.Portable.RestResponse">
            <summary>
            The default REST response
            </summary>
        </member>
        <member name="M:RestSharp.Portable.RestResponse.#ctor(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Constructor that initializes the REST client and request
            </summary>
            <param name="client">REST client</param>
            <param name="request">REST request</param>
        </member>
        <member name="M:RestSharp.Portable.RestResponse.LoadResponse(System.Net.Http.HttpResponseMessage)">
            <summary>
            Utility function that really initializes this response object from
            a HttpResponseMessage
            </summary>
            <param name="response">Response that will be used to initialize this response.</param>
            <returns>Task, because this function runs asynchronously</returns>
        </member>
        <member name="P:RestSharp.Portable.RestResponse.Client">
            <summary>
            The REST client that created this response
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestResponse.Request">
            <summary>
            Request that resulted in this response
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestResponse.ResponseUri">
            <summary>
            The full response URL
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestResponse.RawBytes">
            <summary>
            The raw data
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestResponse.ContentType">
            <summary>
            Content type of the raw data
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestResponse.Headers">
            <summary>
            Response headers (without content headers)
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestResponse.StatusCode">
            <summary>
            HTTP status code
            </summary>
        </member>
        <member name="P:RestSharp.Portable.RestResponse.StatusDescription">
            <summary>
            Description for the HTTP status code
            </summary>
        </member>
        <member name="T:RestSharp.Portable.RestResponse`1">
            <summary>
            The default deserializing REST response
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:RestSharp.Portable.RestResponse`1.#ctor(RestSharp.Portable.IRestClient,RestSharp.Portable.IRestRequest)">
            <summary>
            Constructor that initializes the REST client and request
            </summary>
            <param name="client">REST client</param>
            <param name="request">REST request</param>
        </member>
        <member name="M:RestSharp.Portable.RestResponse`1.LoadResponse(System.Net.Http.HttpResponseMessage)">
            <summary>
            Utility function that really initializes this response object from
            a HttpResponseMessage
            </summary>
            <param name="response">Response that will be used to initialize this response.</param>
            <returns>Task, because this function runs asynchronously</returns>
            <remarks>
            This override also deserializes the response
            </remarks>
        </member>
        <member name="P:RestSharp.Portable.RestResponse`1.Data">
            <summary>
            Deserialized object of type T
            </summary>
        </member>
        <member name="T:RestSharp.Portable.Serializers.XmlDataContractSerializer">
            <summary>
            Serializes an object using the DataContractSerializer
            </summary>
        </member>
        <member name="T:RestSharp.Portable.Serializers.ISerializer">
            <summary>
            Serializer for a content type
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Serializers.ISerializer.Serialize(System.Object)">
            <summary>
            Serialize the object into a byte array
            </summary>
            <param name="obj">Object to serialize</param>
            <returns>Byte array to send in the request body</returns>
        </member>
        <member name="P:RestSharp.Portable.Serializers.ISerializer.ContentType">
            <summary>
            Content type produced by the serializer
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Serializers.XmlDataContractSerializer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Serializers.XmlDataContractSerializer.Serialize(System.Object)">
            <summary>
            Serialize the object into a byte array
            </summary>
            <param name="obj">Object to serialize</param>
            <returns>Byte array to send in the request body</returns>
        </member>
        <member name="M:RestSharp.Portable.Serializers.XmlDataContractSerializer.CreateSerializer(System.Object)">
            <summary>
            Create a new data contract serializer
            </summary>
            <param name="obj">The object to create the serializer for</param>
        </member>
        <member name="P:RestSharp.Portable.Serializers.XmlDataContractSerializer.XmlWriterSettings">
            <summary>
            The configuration used to create an XML writer
            </summary>
        </member>
        <member name="P:RestSharp.Portable.Serializers.XmlDataContractSerializer.ContentType">
            <summary>
            Content type produced by the serializer
            </summary>
            <remarks>
            As long as there is no manually set content type, the content type character set will always reflect the encoding
            of the XmlWriterSettings.
            </remarks>
        </member>
        <member name="T:RestSharp.Portable.Serializers.JsonSerializer">
            <summary>
            The default JSON serializer using Json.Net
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Serializers.JsonSerializer.#ctor">
            <summary>
            Constructor which initializes this serializer
            </summary>
        </member>
        <member name="M:RestSharp.Portable.Serializers.JsonSerializer.ConfigureSerializer(Newtonsoft.Json.JsonSerializer)">
            <summary>
            Configure the JsonSerializer
            </summary>
            <param name="serializer">The serializer to configure</param>
        </member>
        <member name="M:RestSharp.Portable.Serializers.JsonSerializer.Serialize(System.Object)">
            <summary>
            Serialize the object into a byte array
            </summary>
            <param name="obj">Object to serialize</param>
            <returns>Byte array to send in the request body</returns>
        </member>
        <member name="P:RestSharp.Portable.Serializers.JsonSerializer.ContentType">
            <summary>
            Content type produced by the serializer
            </summary>
            <remarks>
            This serializer will return application/json
            </remarks>
        </member>
        <member name="T:System.Security.Cryptography.MD5Managed">
            <summary>
            MD5Managed: A HashAlgorithm implementation that acts as a thin wrapper
            around a C# translation of the MD5 reference implementation. The C code
            has been translated as closely as possible so that most of the original
            structure remains and comparisons between the two are straightforward.
            </summary>
            <remarks>
            Derived from the RSA Data Security, Inc. MD5 Message-Digest Algorithm.
            
            Specification:
            RFC1321 - The MD5 Message-Digest Algorithm
            http://www.faqs.org/rfcs/rfc1321.html
            
            Original license:
            Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All
            rights reserved.
            
            License to copy and use this software is granted provided that it
            is identified as the "RSA Data Security, Inc. MD5 Message-Digest
            Algorithm" in all material mentioning or referencing this software
            or this function.
            
            License is also granted to make and use derivative works provided
            that such works are identified as "derived from the RSA Data
            Security, Inc. MD5 Message-Digest Algorithm" in all material
            mentioning or referencing the derived work.
            
            RSA Data Security, Inc. makes no representations concerning either
            the merchantability of this software or the suitability of this
            software for any particular purpose. It is provided "as is"
            without express or implied warranty of any kind.
            
            These notices must be retained in any copies of any part of this
            documentation and/or software.
            </remarks>
        </member>
        <member name="M:System.Security.Cryptography.MD5Managed.#ctor">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.MD5Managed.Initialize">
            <summary>
            Initializes internal state.
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.MD5Managed.InitializeVariables">
            <summary>
            Initializes variables.
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.MD5Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates the hash code with the data provided.
            </summary>
            <param name="array">Data to hash.</param>
            <param name="ibStart">Start position.</param>
            <param name="cbSize">Number of bytes.</param>
        </member>
        <member name="M:System.Security.Cryptography.MD5Managed.HashFinal">
            <summary>
            Finalizes the hash code and returns it.
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Security.Cryptography.MD5Managed.Hash">
            <summary>
            Returns the hash as an array of bytes.
            </summary>
        </member>
    </members>
</doc>
